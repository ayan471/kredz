generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model CreditBuilderApplication {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  userId      String
  fullName    String
  phoneNo     String
  aadharNo    String
  panNo       String
  creditScore String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CreditBuilderSubscription {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  userId            String
  fullName          String
  phoneNo           String
  plan              String
  status            String?   @default("pending_payment")
  createdAt         DateTime  @default(now())
  expiryDate        DateTime?
  updatedAt         DateTime  @updatedAt
  creditHealth      String?
  monthlyHealthData String?
  isActive          Boolean   @default(false)
  activationDate    DateTime?

  @@index([userId])
}

model CreditBuilderApplicationData {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  userId      String  @unique
  fullName    String?
  email       String?
  phoneNo     String?
  aadharNo    String?
  panNo       String?
  creditScore String?

  step      Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model LoanApplication {
  id                       String           @id @default(auto()) @map("_id") @db.ObjectId
  userId                   String
  fullName                 String
  phoneNo                  String
  email                    String?
  amtRequired              String
  prpseOfLoan              String
  aadharImgFrontUrl        String?
  aadharImgBackUrl         String?
  aadharNo                 String
  panImgFrontUrl           String?
  dateOfBirth              DateTime?
  age                      Int?
  panNo                    String
  creditScore              String
  empType                  String
  EmpOthers                String?
  monIncome                String
  currEmis                 String?
  selfieImgUrl             String?
  bankStatmntImgUrl        String?
  createdAt                DateTime         @default(now())
  updatedAt                DateTime         @updatedAt
  status                   String?          @default("In Progress")
  eligibility              LoanEligibility?
  eligibleAmount           Float?
  loanEligibility          Float?
  loanAmount               Float?
  approvedAmount           Float?
  rejectionReason          String?
  processingFees           Float?
  gst                      Float?
  otherCharges             Float?
  rateOfInterest           Float?
  tenure                   Int?
  netDisbursement          Float?
  disbursementAccount      String?
  disbursementDate         DateTime?
  lender                   String?
  membershipPlan           String?
  emi                      Float?
  emiPayments              EMIPayment[]
  emiPaymentLink           String?
  accountNumber            Int?
  bankName                 String?
  ifscCode                 String?
  eMandate                 Boolean          @default(true)
  membershipActive         Boolean?         @default(false)
  membershipActivationDate DateTime?
  totalActiveLoans         String?
}

model EMIPayment {
  id                             String                        @id @default(auto()) @map("_id") @db.ObjectId
  loanId                         String                        @db.ObjectId
  amount                         Float
  paymentDate                    DateTime
  loan                           LoanApplication               @relation(fields: [loanId], references: [id])
  creditbuilderloan              CreditBuilderLoanApplication? @relation(fields: [creditBuilderLoanApplicationId], references: [id])
  creditBuilderLoanApplicationId String?                       @db.ObjectId
}

model LoanEligibility {
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  userId          String
  application     LoanApplication @relation(fields: [applicationId], references: [id])
  applicationId   String          @unique @db.ObjectId
  fullName        String
  phoneNo         String
  emailID         String
  panNo           String
  aadharNo        String
  emiTenure       String
  loanEligibility Float?
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  membership      LoanMembership?
}

model LoanMembership {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  userId         String
  eligibility    LoanEligibility @relation(fields: [eligibilityId], references: [id])
  eligibilityId  String          @unique @db.ObjectId
  fullName       String
  phoneNo        String
  emailID        String
  panNo          String
  aadharNo       String
  membershipPlan String
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model ChannelPartner {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  userId            String   @unique
  referralId        String   @unique
  leadsAdded        Int      @default(0)
  leadsSuccessful   Int      @default(0)
  leadsRejected     Int      @default(0)
  leadsPending      Int      @default(0)
  totalEarnings     Float    @default(0)
  totalWithdrawn    Float    @default(0)
  pendingSettlement Float    @default(0)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model LoanApplicationData {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  userId           String
  fullName         String?
  phoneNo          String?
  email            String?
  dateOfBirth      DateTime?
  age              Int?
  amtRequired      String?
  prpseOfLoan      String?
  aadharNo         String?
  panNo            String?
  creditScore      String?
  eligibleAmount   Float?
  empType          String?
  totalActiveLoans String?
  EmpOthers        String?
  monIncome        String?
  currEmis         String?
  emailID          String?
  emiTenure        String?
  membershipPlan   String?
  accountNumber    String?
  bankName         String?
  ifscCode         String?
  eMandate         Boolean   @default(true)
  step             Int       @default(1)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model ContactFormSubmission {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String
  phone     String
  message   String
  createdAt DateTime @default(now())
}

model RejectedLoanApplication {
  id                   String   @id @default(auto()) @map("_id") @db.ObjectId
  userId               String
  fullName             String
  email                String?
  phoneNo              String
  dateOfBirth          DateTime
  amtRequired          String
  prpseOfLoan          String
  aadharNo             String
  panNo                String
  creditScore          String
  empType              String
  EmpOthers            String?
  monIncomeRange       String
  monIncome            String
  currEmis             String
  totalActiveLoans     String
  rejectionReason      String
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  address              String?
  hasSalarySlip        Boolean?
  salaryReceiveMethod  String?
  hasIncomeTaxReturn   Boolean?
  businessRegistration String?
}

model CreditBuilderLoanApplication {
  id                    String       @id @default(auto()) @map("_id") @db.ObjectId
  userId                String
  fullName              String
  mobileNumber          String
  email                 String?
  dateOfBirth           DateTime
  age                   Int
  address               String
  loanAmountRequired    Float
  purpose               String
  aadharNumber          String
  aadharFrontUrl        String?
  aadharBackUrl         String?
  panNumber             String
  panCardUrl            String?
  employmentType        String
  monthlyIncome         Float
  hasSalarySlip         Boolean?
  salaryReceiveMethod   String?
  hasIncomeTaxReturn    Boolean?
  businessRegistration  String?
  creditScore           Int
  currentActiveEmis     Int
  currentActiveOverdues Int
  bankStatementUrl      String?
  status                String?      @default("In Progress")
  createdAt             DateTime     @default(now())
  updatedAt             DateTime     @updatedAt
  eligibleAmount        Float?
  rejectionReason       String?
  accountNumber         String?
  bankName              String?
  ifscCode              String?
  emiTenure             Int?
  approvedAmount        Float?
  emi                   Float?
  emiPayments           EMIPayment[]
  emiPaymentLink        String?
  processingFees        Float?
  gst                   Float?
  otherCharges          Float?
  rateOfInterest        Float?
  tenure                Int?
  netDisbursement       Float?
  disbursementAccount   String?
  disbursementDate      DateTime?
  lender                String?
  fasterProcessingPaid  Boolean      @default(false)
}
